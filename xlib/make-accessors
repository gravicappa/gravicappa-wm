#!/bin/sh

. ./functions
create_tags

make_struct_accessor() {
	local st="$1"
	local field="$2"
	local type=$(get_field_type `get_struct_name $st` $field)
	local accessor="`lisp_name $st-$field`"

	# workarounds
	case "$field" in
		c_*) field=${field##c_} ;;
	esac
	case "$type" in 
		*'*') return ;;
		Bool) accessor="${accessor}?" ;;
	esac

	cat << ! | expand -t2 
(define $accessor
  (c-lambda ($st*) 
	          $type 
	          "___result = ___arg1->$field;"))

!
}

make_struct_accessors() {
	st=$1
	for f in $(get_struct_fields `get_struct_name $st`) ; do
		make_struct_accessor $st $f
	done
}

while read struct ; do
	make_struct_accessors $struct
done

